{"version":3,"sources":["firebase.js","Components/header.js","Components/post.js","Components/postlist.js","Components/footer.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Header","React","useState","inputString","state","setState","className","id","type","value","onChange","event","target","placeholder","onClick","postsRef","database","ref","today","Date","getTime","post","votes","text","date","push","Post","props","clicked","setClicked","child","postId","update","icon","fasThumbsUp","farThumbsUp","PostList","posts","on","snapshot","postArray","forEach","filteredPosts","this","sort","a","b","val","postList","length","map","info","key","name","filterChange","bind","class","Component","Footer","href","faGithub","faReact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95b6276a.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDY0MZ4gcQad0pcCWpLJK36kwWZ6_joFqE\",\r\n    authDomain: \"quarantine-quarms.firebaseapp.com\",\r\n    databaseURL: \"https://quarantine-quarms.firebaseio.com\",\r\n    projectId: \"quarantine-quarms\",\r\n    storageBucket: \"quarantine-quarms.appspot.com\",\r\n    messagingSenderId: \"157038791595\",\r\n    appId: \"1:157038791595:web:f84110effa13f3657860ee\",\r\n    measurementId: \"G-N1EMEQHY7E\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\nexport default firebase;","import React, { Component, useState } from 'react';\r\nimport './header.css';\r\nimport firebase from '../firebase.js';\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const [state, setState] = React.useState({\r\n        inputString: ''\r\n    });\r\n\r\n    function handleClick() {\r\n        const postsRef = firebase.database().ref('posts');\r\n        var today = new Date().getTime();\r\n        const post = { votes: 0, text: state.inputString, date: today};\r\n        postsRef.push(post);\r\n        setState({ inputString: '' });\r\n    }\r\n\r\n    return (\r\n        <div className=\"Header\">\r\n            <h1 className=\"m-5\">QUARANTINE QUARMS</h1>\r\n            <h3 className=\"m-4\">Tell us about your quarantine</h3>\r\n            <textarea id=\"Header-Input\"\r\n                type=\"text\"\r\n                value={state.inputString}\r\n                onChange={event => setState({ inputString: event.target.value })}\r\n                placeholder=\"What's the worst part of quarantine? What do you miss about outside? Which one of your family members do you want to kill and why?\" />\r\n            <button id=\"Header-Input-Button\" onClick={handleClick}>POST</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component, useState } from 'react';\r\nimport './post.css';\r\nimport firebase from '../firebase.js';\r\nimport { faThumbsUp as fasThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faThumbsUp as farThumbsUp } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    function iconClicked() {\r\n        const postsRef = firebase.database().ref('posts');\r\n        setClicked(!clicked);\r\n        if (clicked) {\r\n            //Reduce votes by 1\r\n            postsRef.child(props.postId).update({votes: props.votes - 1});\r\n        } else {\r\n            //Increase votes by 1\r\n            postsRef.child(props.postId).update({votes: props.votes + 1});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Post\">\r\n            <button className=\"Post-Icon-Button\" onClick={iconClicked}>\r\n                <FontAwesomeIcon className={clicked ? \"Post-Icon-Clicked\": \"Post-Icon\"} icon={clicked ? fasThumbsUp : farThumbsUp}/>\r\n            </button>\r\n            <p className=\"Post-Vote-Count\">{props.votes}</p>\r\n            <p className=\"Post-Text\">{props.text}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component, useEffect, useState } from 'react';\r\nimport './postlist.css';\r\nimport Post from './post.js'\r\nimport firebase from '../firebase.js';\r\n\r\n\r\nclass PostList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { posts: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const postsRef = firebase.database().ref('posts');\r\n        postsRef.on('value', (snapshot) => {\r\n            let postArray = [];\r\n            snapshot.forEach((post) => {\r\n                postArray.push(post);\r\n            })\r\n            this.setState({ posts: postArray });\r\n        })\r\n    }\r\n\r\n    filterChange(event) {\r\n        if (event.target.value == \"new-date\") {\r\n            var filteredPosts = this.state.posts.sort((a, b) => a.val().date < b.val().date ? 1 : -1);\r\n            this.setState({ posts: filteredPosts });\r\n        }\r\n        if (event.target.value == \"old-date\") {\r\n            var filteredPosts = this.state.posts.sort((a, b) => a.val().date > b.val().date ? 1 : -1);\r\n            this.setState({ posts: filteredPosts });\r\n        }\r\n        if (event.target.value == \"most-votes\") {\r\n            var filteredPosts = this.state.posts.sort((a, b) => a.val().votes < b.val().votes ? 1 : -1);\r\n            this.setState({ posts: filteredPosts });\r\n        }\r\n        if (event.target.value == \"least-votes\") {\r\n            var filteredPosts = this.state.posts.sort((a, b) => a.val().votes > b.val().votes ? 1 : -1);\r\n            this.setState({ posts: filteredPosts });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let postList;\r\n        if (this.state.posts.length < 1) {\r\n            postList = <p>No posts to show :(</p>;\r\n        } else {\r\n            postList = this.state.posts.map(info => <Post key={info.key} postId={info.key} {...info.val()} />);\r\n        }\r\n\r\n        return (\r\n            <div className=\"Post-List-Container\">\r\n                <h2 className=\"Post-List-Title\">Posts</h2>\r\n                <p>FILTER</p>\r\n                <select name=\"filter-dropdown\" id=\"Filter\" onChange={this.filterChange.bind(this)}>\r\n                    <option class=\"select-option\" value=\"select\">Select...</option>\r\n                    <option class=\"select-option\" value=\"new-date\">Newest</option>\r\n                    <option class=\"select-option\" value=\"old-date\">Oldest</option>\r\n                    <option class=\"select-option\" value=\"most-votes\">Most Votes</option>\r\n                    <option class=\"select-option\" value=\"least-votes\">Least Votes</option>\r\n                </select>\r\n                {postList}\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default PostList;\r\n\r\n\r\n\r\n // WAS TRYING TO DO THIS COMPONENT AS A FUNCTIONAL COMPONENT BUT COULDN'T FIGURE OUT\r\n // THE STATE AND FILTERING ISSUE WITHOUT CREATING AN INFINITE LOOP IN USEEFFECT :/\r\n\r\n\r\n// function usePosts() {\r\n//     const [posts, setPosts] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         const postsRef = firebase.database().ref('posts');\r\n//         postsRef.on('value', (snapshot) => {\r\n//             let postArray = [];\r\n//             snapshot.forEach((post) => {\r\n//                 postArray.push(post);\r\n//             })\r\n//             setPosts(postArray);\r\n//         })\r\n//     }, [])\r\n\r\n//     return posts;\r\n// }\r\n\r\n// function filterChange(event, posts) {\r\n//     if (event.target.value == \"date\") {\r\n//         var filteredPosts = posts.sort((a, b) => a.val().date < b.val().date ? 1 : -1);\r\n//         posts = filteredPosts;\r\n//     }\r\n//     if (event.target.value == \"vote\") {\r\n//         var filteredPosts = posts.sort((a, b) => a.val().votes < b.val().votes ? 1 : -1);\r\n//         posts = filteredPosts;\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n//POSSIBLY IF YOU SET THE STATE OF THIS POSTLIST OBJECT TO BE POSTS, YOU COULD THEN FILTER THAT????????????????\r\n\r\n\r\n// const PostList = (props) => {\r\n//     const posts = usePosts();\r\n//     if (posts.length < 1) {\r\n//         return (\r\n//             <div className=\"Post-List-Container\">\r\n//                 <h2 className=\"Post-List-Title\">Posts</h2>\r\n//                 <p>FILTER</p>\r\n//                 <select name=\"filter-dropdown\" id=\"Filter\" onChange={(e) => filterChange(e, posts)}>\r\n//                     <option value=\"select\">Select...</option>\r\n//                     <option value=\"date\">Date</option>\r\n//                     <option value=\"vote\">Vote Count</option>\r\n//                 </select>\r\n//                 <p>No posts to show :(</p>\r\n//             </div>\r\n//         );\r\n//     } else {\r\n//         return (\r\n//             <div className=\"Post-List-Container\">\r\n//                 <h2 className=\"Post-List-Title\">Posts</h2>\r\n//                 <p>FILTER</p>\r\n//                 <select name=\"filter-dropdown\" id=\"Filter\" onChange={(e) => filterChange(e, posts)}>\r\n//                     <option value=\"select\">Select...</option>\r\n//                     <option value=\"date\">Date</option>\r\n//                     <option value=\"vote\">Vote Count</option>\r\n//                 </select>\r\n//                 {posts.map(info => <Post key={info.key} postId={info.key} {...info.val()} />)}\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './footer.css';\r\nimport { FontAwesomeIcon } from '../../node_modules/@fortawesome/react-fontawesome';\r\nimport { faReact } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"Footer\">\r\n            <p className=\"Footer-SiteName\">Quarantine Quarms</p>  \r\n            <a href=\"https://github.com/danieljones97/quarantine-quarms\" target=\"_blank\"><FontAwesomeIcon icon={faGithub}/></a>\r\n            <p className=\"Footer-DevBy\">Developed by Daniel Jones using <FontAwesomeIcon icon={faReact}/>React</p>    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport './App.css';\nimport Header from './Components/header.js';\nimport PostList from './Components/postlist.js';\nimport Footer from './Components/footer.js';\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <PostList />\n      <Footer />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}